,test_name,code_len,dumb_dyn_slice,dyn_slice,pruned_slice,dumb_dyn_slice_len,pruned_slice_len,dyn_slice_len,runtime_bare_test,runtime_tracing_augmented_test,runtime_dyn_slice,runtime_pruned_slice,perf_runtime_bare_test,perf_runtime_tracing_augmented_test,perf_runtime_dyn_slice,perf_runtime_pruned_slice,len_exec_trace,test_result,sliced_result_equal_to_bare,exception

this uses builtin "filter" that gets a function pointer as parameter. we dont support function pointers.
theres however no easy way to throw an exception early in execution since in the ast the function pointer is merely a name (dynamic typing, yay!)
we could exclude all buildin functions that are often used in this kind of constructs (map, filter), hoever one can overload those and have a "map" function in the sliced program that we would have to check for.
should we hardcode not-supported-exceptions for 'map' and 'filter' functions that appear in the code?
9462,benchmark/refactory/data/question_2/code/correct/correct_2_005.py#2:,40.0,"{40, 13, 14, 15, 16, 18, 19, 20, 21}","{40, 13, 14, 15, 18, 19, 20, 21}","{40, 13, 14, 15, 18, 19, 20, 21}",9.0,8.0,8.0,-3.689983714139089e-07,-3.2900061341933906e-07,-2.449996827635914e-07,-3.160002961521968e-07,0.0002514099996915,0.0012611120000656,0.00012623099974,0.0001147710008808,22.0,True,False,
9468,benchmark/refactory/data/question_2/code/correct/correct_2_005.py#8:,40.0,"{1, 2, 3, 4, 6, 7, 40, 8, 9}","{1, 2, 3, 6, 7, 40, 9, 8}","{1, 2, 3, 6, 7, 40, 9, 8}",9.0,8.0,8.0,-3.6700112104881565e-07,-4.209996404824778e-07,-2.769993443507701e-07,-2.310007403139025e-07,0.0002490089991624,0.0012646729992411,0.0001254729995707,0.0001152120003098,22.0,True,False,
9471,benchmark/refactory/data/question_2/code/correct/correct_2_005.py#11:,40.0,"{1, 2, 3, 4, 6, 7, 40, 8, 9}","{1, 2, 3, 6, 7, 40, 9, 8}","{1, 2, 3, 6, 7, 40, 9, 8}",9.0,8.0,8.0,-3.6299934436101466e-07,-3.489985829219222e-07,-3.040004230570048e-07,-2.729993866523728e-07,0.0002373290008108,0.0013243100002,0.0001994659996853,0.0001821910009311,54.0,True,False,
9472,benchmark/refactory/data/question_2/code/correct/correct_2_005.py#12:,40.0,"{1, 2, 3, 4, 6, 7, 40, 8, 9}","{1, 2, 3, 6, 7, 40, 9, 8}","{1, 2, 3, 6, 7, 40, 9, 8}",9.0,8.0,8.0,-3.790009941440076e-07,-5.67000824958086e-07,-2.5800000003073364e-07,-3.089990059379488e-07,0.000237587999436,0.0016656749994581,0.0002190329996665,0.0002090409998345,54.0,True,False,


same issue as benchmark/refactory/data/question_3/code/correct/correct_3_056.py#5:
14162,benchmark/refactory/data/question_3/code/correct/correct_3_411.py#3:,13.0,"{1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}",11.0,8.0,8.0,-3.389995981706307e-07,-3.379991539986804e-07,-2.999986463692039e-07,-2.909982868004591e-07,7.23449993529357e-05,0.000512795000759,0.000398705000407,0.0003458810006122,91.0,True,False,
14163,benchmark/refactory/data/question_3/code/correct/correct_3_411.py#4:,13.0,"{1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}",11.0,8.0,8.0,-3.499990270938725e-07,-3.6600067687686533e-07,-3.050008672289551e-07,-2.6500129024498165e-07,7.290800022019539e-05,0.0005133499998919,0.0003505160002532,0.0003412419991946,91.0,True,False,
14164,benchmark/refactory/data/question_3/code/correct/correct_3_411.py#5:,13.0,"{1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}",11.0,8.0,8.0,-3.579989424906671e-07,-3.38000972988084e-07,-3.0800038075540215e-07,-2.7199894248042256e-07,0.0001100379995477,0.0005601170014415,0.0003699160006362,0.0003435990001889,91.0,True,False,


same issue as benchmark/refactory/data/question_3/code/correct/correct_3_056.py#5:
14312,benchmark/refactory/data/question_3/code/correct/correct_3_517.py#3:,13.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}",11.0,8.0,8.0,-3.389995981706307e-07,-3.240002115489915e-07,-2.85999703919515e-07,-3.049990482395515e-07,8.731900015845895e-05,0.0006778089991712,0.0004005119990324,0.0003932020008505,105.0,True,False,
14313,benchmark/refactory/data/question_3/code/correct/correct_3_517.py#4:,13.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}",11.0,8.0,8.0,-3.6299934436101466e-07,-3.4900040191132575e-07,-2.819997462211177e-07,-3.090008249273524e-07,8.798499948170502e-05,0.0006794780001655,0.000401368999519,0.0003931560004275,105.0,True,False,
14314,benchmark/refactory/data/question_3/code/correct/correct_3_517.py#5:,13.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}",11.0,8.0,8.0,-3.650002327049151e-07,-3.6100027500651777e-07,-2.9600050766021013e-07,-2.609995135571808e-07,8.709900066605769e-05,0.0007051270004012,0.0004020500000478,0.0004202039999654,105.0,True,False,


same issue as benchmark/refactory/data/question_3/code/correct/correct_3_056.py#5:
14348,benchmark/refactory/data/question_3/code/correct/correct_3_280.py#3:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.320001269457862e-07,-3.389995981706307e-07,-3.0800038075540215e-07,-3.059994924115017e-07,7.279500096046831e-05,0.0004996930001652,0.0004813809991901,0.0004307500003051,75.0,True,False,
14349,benchmark/refactory/data/question_3/code/correct/correct_3_280.py#4:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.650002327049151e-07,-3.280001692473889e-07,-2.81001121038571e-07,-2.850010787369684e-07,7.500500032620039e-05,0.0005512370007636,0.0004393250001157,0.0004296650004107,75.0,True,False,
14350,benchmark/refactory/data/question_3/code/correct/correct_3_280.py#5:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.550012479536236e-07,-3.339991963002831e-07,-2.61999957729131e-07,-3.050008672289551e-07,7.110600017767865e-05,0.000495451999086,0.000439109000581,0.0004311210013838,75.0,True,False,


helper(start,i) modifies list by reference
same issue as same issue as benchmark/refactory/data/question_3/code/correct/correct_3_064.py#3:
14630,benchmark/refactory/data/question_3/code/correct/correct_3_435.py#3:,19.0,"{1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19}","{1, 18, 19, 14}","{1, 18, 19, 14}",17.0,4.0,4.0,-3.42999555869028e-07,-3.30999682773836e-07,-2.830001903930679e-07,-3.140012267977e-07,0.0001576100003148,0.0011044920011045,0.0006136680003692,0.0006031930006429,174.0,True,False,
14631,benchmark/refactory/data/question_3/code/correct/correct_3_435.py#4:,19.0,"{1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19}","{1, 18, 19, 14}","{1, 18, 19, 14}",17.0,4.0,4.0,-3.379991539986804e-07,-3.280001692473889e-07,-3.250006557209417e-07,-2.9100010578986257e-07,0.000156236001203,0.0010793179990287,0.0006206990001373,0.00060299299912,174.0,True,False,
14632,benchmark/refactory/data/question_3/code/correct/correct_3_435.py#5:,19.0,"{1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19}","{1, 18, 19, 14}","{1, 18, 19, 14}",17.0,4.0,4.0,-3.820005076704547e-07,-3.250006557209417e-07,-3.029999788850546e-07,-2.7900023269467056e-07,0.0001553490001242,0.0010511090004001,0.0006165819995658,0.0006077159996493,174.0,True,False,


same issue as benchmark/refactory/data/question_3/code/correct/correct_3_056.py#5 below
14702,benchmark/refactory/data/question_3/code/correct/correct_3_121.py#3:,11.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}",11.0,8.0,8.0,-3.4199911169707775e-07,-2.939996193163097e-07,-3.019995347131044e-07,-2.730012056417763e-07,7.017400093900505e-05,0.0005458060004457,0.0003475670000625,0.0003398450007807,91.0,True,False,
14703,benchmark/refactory/data/question_3/code/correct/correct_3_121.py#4:,11.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}",11.0,8.0,8.0,-3.459990693954751e-07,-3.320001269457862e-07,-2.969991328427568e-07,-2.950000634882599e-07,6.923299952177331e-05,0.0006093779993534,0.0003496539993648,0.0003429550015425,91.0,True,False,
14704,benchmark/refactory/data/question_3/code/correct/correct_3_121.py#5:,11.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}",11.0,8.0,8.0,-3.459990693954751e-07,-3.019995347131044e-07,-3.000004653586075e-07,-2.939996193163097e-07,6.912500066391658e-05,0.0005667799996444,0.0003501669998513,0.0003433450001466,91.0,True,False,


same issue as benchmark/refactory/data/question_3/code/correct/correct_3_056.py#5 below
14744,benchmark/refactory/data/question_3/code/correct/correct_3_082.py#3:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.4000004234258085e-07,-3.330005711177364e-07,-3.000004653586075e-07,-3.0099909054115415e-07,7.253600051626563e-05,0.0004926379988319,0.0004355359997134,0.0004773790005856,75.0,True,False,
14745,benchmark/refactory/data/question_3/code/correct/correct_3_082.py#4:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.770001058001071e-07,-3.130007826257497e-07,-2.409997250651941e-07,-2.679989847820252e-07,7.281999933184125e-05,0.0004929860006086,0.0004399179997562,0.0004329129988036,75.0,True,False,
14746,benchmark/refactory/data/question_3/code/correct/correct_3_082.py#5:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-8.995000825962052e-06,-3.109998942818493e-07,-2.850010787369684e-07,-2.329998096683994e-07,7.343399920500815e-05,0.0005185739992157,0.0004370869992271,0.0004294760001357,75.0,True,False,


same issue as benchmark/refactory/data/question_3/code/correct/correct_3_056.py#5 below
14780,benchmark/refactory/data/question_3/code/correct/correct_3_271.py#3:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.590012056520209e-07,-3.389995981706307e-07,-2.630004019010812e-07,-3.220011421944946e-07,7.154200102377217e-05,0.0004944119991705,0.0004860179997194,0.000428262999776,75.0,True,False,
14781,benchmark/refactory/data/question_3/code/correct/correct_3_271.py#4:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.229997673770413e-07,-3.530003596097231e-07,-2.970009518321604e-07,-2.680008037714288e-07,7.263999941642396e-05,0.0004918009999528,0.0004358380010671,0.0004308690004108,75.0,True,False,
14782,benchmark/refactory/data/question_3/code/correct/correct_3_271.py#5:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.559998731361702e-07,-3.450004442129284e-07,-3.089990059379488e-07,-2.6899942895397544e-07,7.085300057951827e-05,0.0005618659997708,0.0004374899999675,0.0004315489986765,75.0,True,False,


same issue as benchmark/refactory/data/question_3/code/correct/correct_3_064.py#3:
remove_multiple(i, lst)  modifies lst by reference and unsafe and sketchy list operations during iteration
15182,benchmark/refactory/data/question_3/code/correct/correct_3_075.py#3:,17.0,"{1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17}","{17, 2, 1, 4}","{17, 2, 1, 4}",12.0,4.0,4.0,-3.149998519802466e-07,-3.149998519802466e-07,-2.980013960041106e-07,-2.679989847820252e-07,9.2198999482207e-05,0.0005676860000676,0.0002659310011949,0.0002560100001574,59.0,True,False,
15183,benchmark/refactory/data/question_3/code/correct/correct_3_075.py#4:,17.0,"{1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17}","{17, 2, 1, 4}","{17, 2, 1, 4}",12.0,4.0,4.0,-3.3599826565478e-07,-3.089990059379488e-07,-2.699998731259257e-07,-2.73999830824323e-07,9.260799924959429e-05,0.0005714200015063,0.0002676929998415,0.0002574110003479,59.0,True,False,
15184,benchmark/refactory/data/question_3/code/correct/correct_3_075.py#5:,17.0,"{1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17}","{17, 2, 1, 4}","{17, 2, 1, 4}",12.0,4.0,4.0,-3.4000004234258085e-07,-3.579989424906671e-07,-2.460001269355417e-07,-2.890010364353657e-07,9.256100020138548e-05,0.0005683199997292,0.0002671439997357,0.0002550350000092,59.0,True,False,


same issue as benchmark/refactory/data/question_3/code/correct/correct_3_056.py#5 below
15266,benchmark/refactory/data/question_3/code/correct/correct_3_516.py#3:,13.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}",11.0,8.0,8.0,-3.570003173081205e-07,-3.440000000409782e-07,-2.9600050766021013e-07,-3.470013325568289e-07,8.775299829721916e-05,0.0006763519995729,0.0003999450000264,0.0003935889999411,105.0,True,False,
15267,benchmark/refactory/data/question_3/code/correct/correct_3_516.py#4:,13.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}",11.0,8.0,8.0,-3.62000719178468e-07,-3.320001269457862e-07,-3.0999945010989904e-07,-2.899996616179124e-07,8.735099982004613e-05,0.0006757530009053,0.0004407859996717,0.0003949089987145,105.0,True,False,
15268,benchmark/refactory/data/question_3/code/correct/correct_3_516.py#5:,13.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}","{1, 2, 3, 4, 8, 9, 10, 13}",11.0,8.0,8.0,-3.42999555869028e-07,-3.089990059379488e-07,-2.730012056417763e-07,-2.6700035959947854e-07,8.83310003700899e-05,0.0006784569995943,0.0004040520016133,0.0003947810000681,105.0,True,False,


same issue as benchmark/refactory/data/question_3/code/correct/correct_3_056.py#5 below
15584,benchmark/refactory/data/question_3/code/correct/correct_3_272.py#3:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.639997885329649e-07,-3.479999577393756e-07,-2.61999957729131e-07,-2.659999154275283e-07,7.186899892985821e-05,0.0005337969996617,0.0004384620006021,0.0004302830002416,75.0,True,False,
15585,benchmark/refactory/data/question_3/code/correct/correct_3_272.py#4:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.839995770249516e-07,-3.300010575912893e-07,-2.85999703919515e-07,-2.8800059226341546e-07,7.1418999141315e-05,0.0004913739994663,0.0004381790004117,0.0004467790004127,75.0,True,False,
15586,benchmark/refactory/data/question_3/code/correct/correct_3_272.py#5:,12.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}","{1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12}",12.0,11.0,11.0,-3.4900040191132575e-07,-3.379991539986804e-07,-2.8800059226341546e-07,-2.779997885227204e-07,7.176299914135598e-05,0.0004931570001645,0.0004406909993122,0.0004303030000301,75.0,True,False,


remove_multiple(i, lst)  modifies lst by reference
also, this should not be in the "correct" reference implementations, since modifying a list while iterating over it at the same time is unsafe and unpredictible

16052,benchmark/refactory/data/question_3/code/correct/correct_3_064.py#3:,17.0,"{1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17}","{17, 2, 1, 4}","{17, 2, 1, 4}",12.0,4.0,4.0,-3.149998519802466e-07,-3.059994924115017e-07,-2.9900002118665725e-07,-2.830001903930679e-07,0.0001116750008804,0.0005976000011287,0.0002641039991431,0.0002579219999461,59.0,True,False,
16053,benchmark/refactory/data/question_3/code/correct/correct_3_064.py#4:,17.0,"{1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17}","{17, 2, 1, 4}","{17, 2, 1, 4}",12.0,4.0,4.0,-3.66999302059412e-07,-3.479999577393756e-07,-3.029999788850546e-07,-3.330005711177364e-07,0.0001197439996758,0.000567339000554,0.0002694759987207,0.0002562790014053,59.0,True,False,
16054,benchmark/refactory/data/question_3/code/correct/correct_3_064.py#5:,17.0,"{1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17}","{17, 2, 1, 4}","{17, 2, 1, 4}",12.0,4.0,4.0,-3.3700052881613374e-07,-3.389995981706307e-07,-2.710003172978759e-07,-2.7600071916822344e-07,0.0001121360000979,0.0005681949987774,0.0002676639996934,0.0002581019998615,59.0,True,False,


the very same issue as the one below
16418,benchmark/refactory/data/question_3/code/correct/correct_3_403.py#3:,13.0,"{1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}",11.0,8.0,8.0,-3.4199911169707775e-07,-3.559998731361702e-07,-3.240002115489915e-07,-3.120003384537995e-07,7.17430011718534e-05,0.0005522550000023,0.0003514809995976,0.000345197999195,91.0,True,False,
16419,benchmark/refactory/data/question_3/code/correct/correct_3_403.py#4:,13.0,"{1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}",11.0,8.0,8.0,-3.6299934436101466e-07,-3.3299875212833285e-07,-3.019995347131044e-07,-2.609995135571808e-07,7.06390001141699e-05,0.0005106540011183,0.0003507150013319,0.0003429250009503,91.0,True,False,
16420,benchmark/refactory/data/question_3/code/correct/correct_3_403.py#5:,13.0,"{1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}","{1, 3, 4, 5, 10, 11, 12, 13}",11.0,8.0,8.0,-3.470013325568289e-07,-3.4000004234258085e-07,-3.090008249273524e-07,-2.449996827635914e-07,7.108000136213377e-05,0.0005098709989397,0.0003513270003168,0.0003434009995544,91.0,True,False,


benchmark/refactory/data/question_3/code/correct/correct_3_056.py#5:
test/slicing/test_evaluation_different_results.py test_dependecy_issue_importance_to_drop_some_items
for the runs where checker=False is reached, the assignment in line 10 (l+=[i]) is not happening, therefore this statement is not in the slice.
the case here, in which the actual omission of something is in fact also changing the relevant variable is not considered in dynamic slicing i guess.

17240,benchmark/refactory/data/question_3/code/correct/correct_3_056.py#3:,11.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}",11.0,8.0,8.0,-3.479999577393756e-07,-3.379991539986804e-07,-2.920005499618128e-07,-2.659999154275283e-07,6.853200102341361e-05,0.000500998001371,0.0003489760001684,0.0003898370014212,91.0,True,False,
17241,benchmark/refactory/data/question_3/code/correct/correct_3_056.py#4:,11.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}",11.0,8.0,8.0,-3.250006557209417e-07,-3.449986252235249e-07,-2.870001480914653e-07,-3.169989213347435e-07,6.900299922563136e-05,0.0005027959996368,0.0003506620014377,0.0003433649999351,91.0,True,False,
17242,benchmark/refactory/data/question_3/code/correct/correct_3_056.py#5:,11.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}","{1, 2, 3, 4, 8, 9, 10, 11}",11.0,8.0,8.0,-3.810000634985045e-07,-3.589993866626173e-07,-2.5500048650428653e-07,-2.849992597475648e-07,6.986200060055126e-05,0.0005046149999543,0.0003847580010187,0.000341209999533,91.0,True,False,


for_age(lst) modifies lst by reference
18162,benchmark/refactory/data/question_4/code/correct/correct_4_051.py#1:,14.0,"{1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14}","{1, 12, 13, 14}","{1, 12, 13, 14}",13.0,4.0,4.0,-5.1200004236307e-07,-4.590001481119544e-07,-6.729987944709137e-07,-2.779997885227204e-07,0.0001458719998481,0.0010611940015223,0.0004225979992042,0.0003329319988552,149.0,True,False,
18163,benchmark/refactory/data/question_4/code/correct/correct_4_051.py#2:,14.0,"{1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14}","{1, 12, 13, 14}","{1, 12, 13, 14}",13.0,4.0,4.0,-4.649991751648486e-07,-5.35999788553454e-07,-3.250006557209417e-07,-2.699998731259257e-07,0.0001330509985564,0.0008564079998905,0.0002718779996939,0.000245608998739,103.0,True,False,
18164,benchmark/refactory/data/question_4/code/correct/correct_4_051.py#3:,14.0,"{1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14}","{1, 12, 13, 14}","{1, 12, 13, 14}",13.0,4.0,4.0,-3.440000000409782e-07,-3.790009941440076e-07,-2.939996193163097e-07,-2.81001121038571e-07,0.0001317629994446,0.0007139959998312,0.0001830269993661,0.0001635289991099,65.0,True,False,
18165,benchmark/refactory/data/question_4/code/correct/correct_4_051.py#4:,14.0,"{1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14}","{1, 12, 13, 14}","{1, 12, 13, 14}",13.0,4.0,4.0,-3.589993866626173e-07,-2.920005499618128e-07,-3.530003596097231e-07,-2.590004442026839e-07,0.0001197319998027,0.0006623329991271,0.0001398659987899,0.0001313430002483,45.0,True,False,


THIS IS FIXED:
Major tracing fuckup - no idea how we made it this far without noticing... is fixed now.
test/slicing/test_evaluation_different_results.py test_control_dependency_missing
benchmark/refactory/data/question_4/code/correct/correct_4_296.py#4:
slice:
{2, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 22, 24, 25, 27, 28, 29, 30, 32}

15:	        for i in seq:                                       # in slice
16:	            if age(i) > largest:                            # NOT in slice
17:	                largest = age(i)
18:	                largest_pos = position(seq,i)               # in slice!  this has a control dependency on 16, so if this is in slice, 16 must be aswell

18828,benchmark/refactory/data/question_4/code/correct/correct_4_296.py#1:,31.0,"{1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31}","{1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 31}","{1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 31}",26.0,20.0,20.0,-3.469995135674253e-07,-3.559998731361702e-07,-3.379991539986804e-07,-2.8800059226341546e-07,0.0002179780003643,0.0029059010012133,0.0038423019996116,0.0039374349998979,757.0,True,False,
18829,benchmark/refactory/data/question_4/code/correct/correct_4_296.py#2:,31.0,"{1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31}","{1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 31}","{1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 31}",26.0,20.0,20.0,-3.730001481017098e-07,-3.9800033846404403e-07,-3.029999788850546e-07,-2.929991751443595e-07,0.0002131860001099,0.0025265940003009,0.0030220349999581,0.002989410999362,613.0,True,False,
18831,benchmark/refactory/data/question_4/code/correct/correct_4_296.py#4:,31.0,"{1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31}","{1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 31}","{1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 31}",26.0,20.0,20.0,-3.38000972988084e-07,-5.210004019318148e-07,-2.899996616179124e-07,-2.950000634882599e-07,0.0001971219990082,0.0017716729998937,0.0011670849999063,0.0011020340007235,231.0,True,False,


mergesort(lst) modifies lst by reference
20213,benchmark/refactory/data/question_5/code/correct/correct_5_128.py#0:,30.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}","{1, 29, 30}","{1, 29, 30}",29.0,3.0,3.0,-3.4000004234258085e-07,-3.6100027500651777e-07,-2.979995770147071e-07,-3.169989213347435e-07,0.0002038849997916,0.0043055780006397,0.0015605700009473,0.0016056690001278,650.0,True,False,
20214,benchmark/refactory/data/question_5/code/correct/correct_5_128.py#1:,30.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}","{1, 29, 30}","{1, 29, 30}",29.0,3.0,3.0,-3.379991539986804e-07,-3.959994501201436e-07,-2.7900023269467056e-07,-3.1299896363634616e-07,0.0001988519998121,0.004476871999941,0.0017661259989836,0.0015582579999318,655.0,True,False,
20215,benchmark/refactory/data/question_5/code/correct/correct_5_128.py#2:,30.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}","{1, 29, 30}","{1, 29, 30}",29.0,3.0,3.0,-3.160002961521968e-07,-3.530003596097231e-07,-2.940014383057133e-07,-2.850010787369684e-07,0.0002136539987986,0.00299259699932,0.0009265759999834,0.0009116259989241,395.0,True,False,
20216,benchmark/refactory/data/question_5/code/correct/correct_5_128.py#3:,30.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}","{1, 29, 30}","{1, 29, 30}",29.0,3.0,3.0,-3.719997039297596e-07,-4.089997673872858e-07,-2.9600050766021013e-07,-2.5700137484818697e-07,0.0001874890003819,0.0030238649997045,0.0009245499986718,0.0009380259998579,395.0,True,False,


test/slicing/test_evaluation_different_results.py test_parameter_by_reference_modified_inside_function_2
insertion_sort(lst) modifies lst by reference and is not in slice
20698,benchmark/refactory/data/question_5/code/correct/correct_5_053.py#0:,24.0,"{1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24}","{1, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24}","{1, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24}",20.0,11.0,11.0,-3.42999555869028e-07,-4.339999577496201e-07,-3.010009095305577e-07,-2.7600071916822344e-07,0.0001633020001463,0.0016449859995191,0.0008383039985346,0.0009474090002186,336.0,True,False,
20699,benchmark/refactory/data/question_5/code/correct/correct_5_053.py#1:,24.0,"{1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24}","{1, 13, 15, 16, 17, 19, 21, 22, 23, 24}","{1, 13, 15, 16, 17, 19, 21, 22, 23, 24}",19.0,10.0,10.0,-4.3000000005122274e-07,-4.209996404824778e-07,-3.019995347131044e-07,-2.759989001788199e-07,0.0001664680003159,0.0018535520011937,0.001098519000152,0.0010975500008498,379.0,True,False,
20700,benchmark/refactory/data/question_5/code/correct/correct_5_053.py#2:,24.0,"{1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24}","{1, 13, 15, 16, 17, 19, 21, 22, 23, 24}","{1, 13, 15, 16, 17, 19, 21, 22, 23, 24}",19.0,10.0,10.0,-4.279991117073223e-07,-4.590001481119544e-07,-3.109998942818493e-07,-3.160002961521968e-07,0.0001772769992385,0.0012989879996894,0.0006952819985599,0.0007109730013326,206.0,True,False,
20701,benchmark/refactory/data/question_5/code/correct/correct_5_053.py#3:,24.0,"{1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24}","{1, 13, 15, 16, 17, 19, 21, 22, 23, 24}","{1, 13, 15, 16, 17, 19, 21, 22, 23, 24}",19.0,10.0,10.0,-3.9800033846404403e-07,-4.4800071918871254e-07,-2.9900002118665725e-07,-2.460001269355417e-07,0.0001561819990456,0.001343383000858,0.0005132280002726,0.0005248130000836,178.0,True,False,


test/slicing/test_evaluation_different_results.py test_parameter_by_reference_modified_inside_function_1
modifying the lst object passed as parameter inside the function. returned value unused outside function, but lst was changed.
20978,benchmark/refactory/data/question_5/code/correct/correct_5_416.py#0:,19.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19}","{16, 17, 18, 19, 13, 15}","{16, 17, 18, 19, 13, 15}",17.0,6.0,6.0,-3.779987309826538e-07,-3.4900040191132575e-07,-3.109998942818493e-07,-2.479991962900385e-07,0.0001410980003129,0.0012713649994111,0.000716917000318,0.0006984100000408,268.0,True,False,
20979,benchmark/refactory/data/question_5/code/correct/correct_5_416.py#1:,19.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19}","{16, 17, 18, 19, 13, 15}","{16, 17, 18, 19, 13, 15}",17.0,6.0,6.0,-3.759996616281569e-07,-4.269986675353721e-07,-2.830001903930679e-07,-2.939996193163097e-07,0.0001438780000171,0.0016374280003219,0.0010660360003384,0.0010734959996625,380.0,True,False,
20980,benchmark/refactory/data/question_5/code/correct/correct_5_416.py#2:,19.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19}","{16, 17, 18, 19, 13, 15}","{16, 17, 18, 19, 13, 15}",17.0,6.0,6.0,-3.729983291123063e-07,-3.029999788850546e-07,-2.950000634882599e-07,-2.840006345650181e-07,0.0001385670002491,0.0015271590000338,0.000833899999634,0.0008148409997374,284.0,True,False,
20981,benchmark/refactory/data/question_5/code/correct/correct_5_416.py#3:,19.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19}","{16, 17, 18, 19, 13, 15}","{16, 17, 18, 19, 13, 15}",17.0,6.0,6.0,-3.559998731361702e-07,-3.779987309826538e-07,-2.9100010578986257e-07,-3.240002115489915e-07,0.0001574349989823,0.0013457099994411,0.0007667290010431,0.0008538820002286,272.0,True,False,


test/slicing/test_evaluation_different_results.py test_parameter_by_reference_modified_inside_function
modifying lst object passed as parameter inside of the function. function explicitely returns None, but lst was changed.
21798,benchmark/refactory/data/question_5/code/correct/correct_5_192.py#0:,13.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}","{10, 12, 13}","{10, 12, 13}",13.0,3.0,3.0,-4.249995981808752e-07,-3.719997039297596e-07,-3.770001058001071e-07,-2.8099930204916745e-07,0.000117505000162,0.0010273150001012,0.0005546929987758,0.000478595999084,217.0,True,False,
21799,benchmark/refactory/data/question_5/code/correct/correct_5_192.py#1:,13.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}","{10, 12, 13}","{10, 12, 13}",13.0,3.0,3.0,-5.010006134398282e-07,-4.760004230774939e-07,-3.950008249375969e-07,-3.18999809678644e-07,0.0001349409994872,0.0014075079998292,0.0006680599999526,0.0006752079989382,317.0,True,False,
21800,benchmark/refactory/data/question_5/code/correct/correct_5_192.py#2:,13.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}","{10, 12, 13}","{10, 12, 13}",13.0,3.0,3.0,-3.920013114111498e-07,-4.699995770351961e-07,-3.109998942818493e-07,-2.819997462211177e-07,0.0001266380004381,0.0012834459994337,0.0004783599997608,0.0004783719996339,223.0,True,False,
21801,benchmark/refactory/data/question_5/code/correct/correct_5_192.py#3:,13.0,"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}","{10, 12, 13}","{10, 12, 13}",13.0,3.0,3.0,-3.7400059227366e-07,-3.679997462313622e-07,-2.819997462211177e-07,-2.750002749962732e-07,0.0001222560003952,0.0009736480005813,0.0004387159988255,0.0004291929999453,223.0,True,False,
